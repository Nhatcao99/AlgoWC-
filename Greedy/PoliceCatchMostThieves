#include<iostream>
#include <vector>
using namespace std;

int policeThief(char arr[],int n, int k){
    int count = 0;
    vector<int> pol;
    vector<int> thief;
    for(int i = 0; i < n; i ++){
        if(arr[i] == 'T') thief.push_back(i);
        else pol.push_back(i);
    }
    int i_t = 0 , i_pol = 0;
    while(i_t < thief.size() && i_pol < pol.size()){
        if(abs(pol[i_pol] - thief[i_t]) <= k){
            count ++;
            i_pol ++;
            i_pol ++;
        } else if(thief[i_t] < pol[i_pol]) i_t ++;
        else i_pol ++;
    } return count;
}


int main()
{
    int k, n;

    char arr1[] = { 'P', 'T', 'T', 'P', 'T' };
    k = 2;
    n = sizeof(arr1) / sizeof(arr1[0]);
    cout << "Maximum thieves caught: "
         << policeThief(arr1, n, k) << endl;

    char arr2[] = { 'T', 'T', 'P', 'P', 'T', 'P' };
    k = 2;
    n = sizeof(arr2) / sizeof(arr2[0]);
    cout << "Maximum thieves caught: "
         << policeThief(arr2, n, k) << endl;

    char arr3[] = { 'P', 'T', 'P', 'T', 'T', 'P' };
    k = 3;
    n = sizeof(arr3) / sizeof(arr3[0]);
    cout << "Maximum thieves caught: "
         << policeThief(arr3, n, k) << endl;

    return 0;
} 
